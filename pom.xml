<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda.community</groupId>
    <artifactId>community-hub-release-parent</artifactId>
    <version>1.2.2</version>
    <relativePath />
  </parent>

  <artifactId>eze-java-root</artifactId>
  <version>1.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>eze-java</name>

  <licenses>
    <license>
      <name>Zeebe Community License v1.1</name>
      <url>https://zeebe.io/legal/zeebe-community-license-1.1</url>
    </license>
  </licenses>

  <modules>
    <module>engine</module>
    <module>example</module>
    <module>spring-eze-starter</module>
  </modules>

  <scm>
    <connection>scm:git:git@github.com:camunda-community-hub/eze-java.git</connection>
    <developerConnection>scm:git:git@github.com:camunda-community-hub/eze-java.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/camunda-community-hub/eze-java</url>
  </scm>

  <properties>
    <agrona.version>1.15.1</agrona.version>
    <assertj.version>3.22.0</assertj.version>
    <commons-logging.version>1.2</commons-logging.version>
    <commons.version>3.12.0</commons.version>
    <error-prone.version>2.15.0</error-prone.version>
    <feel-scala.version>1.14.2</feel-scala.version>
    <grpc.version>1.48.1</grpc.version>
    <gson.version>2.9.0</gson.version>
    <guava.version>31.1-jre</guava.version>
    <guava.version>31.1-jre</guava.version>
    <httpasyncclient.version>4.1.5</httpasyncclient.version>
    <httpclient.version>4.5.13</httpclient.version>
    <httpcomponents.version>4.4.15</httpcomponents.version>
    <jackson.version>2.13.2.20220328</jackson.version>
    <junit.version>4.13.2</junit.version>
    <!-- Zeebe Community License v1.1 header -->
    <license.header>${maven.multiModuleProjectDirectory}/COPYING-HEADER.txt</license.header>
    <maven.version>3.0</maven.version>
    <netty.version>4.1.76.Final</netty.version>
    <plugin.version.enforcer>3.0.0</plugin.version.enforcer>
    <plugin.version.flatten>1.2.7</plugin.version.flatten>
    <plugin.version.fmt>2.18</plugin.version.fmt>
    <plugin.version.googlejavaformat>1.15.0</plugin.version.googlejavaformat>
    <plugin.version.jacoco>0.8.8</plugin.version.jacoco>
    <plugin.version.javadoc>3.4.0</plugin.version.javadoc>
    <plugin.version.license>4.1</plugin.version.license>
    <plugin.version.spotless>2.23.0</plugin.version.spotless>

    <plugin.version.surefire>3.0.0-M6</plugin.version.surefire>
    <plugin.version.versions>2.10.0</plugin.version.versions>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <proto.version>2.8.3</proto.version>
    <protobuf.version>3.20.1</protobuf.version>
    <scala-library.version>2.13.8</scala-library.version>

    <skipChecks>false</skipChecks>
    <slf4j.version>1.7.36</slf4j.version>
    <snakeyaml.version>1.30</snakeyaml.version>
    <spring-boot.version>2.7.2</spring-boot.version>
    <spring.version>5.3.19</spring.version>
    <version.java>17</version.java>

    <zeebe.version>8.1.0-alpha4</zeebe.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-bom</artifactId>
        <version>${zeebe.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-bom</artifactId>
        <version>${netty.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-bom</artifactId>
        <version>${grpc.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-client-java</artifactId>
        <version>${zeebe.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-msgpack-value</artifactId>
        <version>${zeebe.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-protocol</artifactId>
        <version>${zeebe.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-protocol-impl</artifactId>
        <version>${zeebe.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-db</artifactId>
        <version>${zeebe.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-snapshots</artifactId>
        <version>${zeebe.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-workflow-engine</artifactId>
        <version>${zeebe.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-util</artifactId>
        <version>${zeebe.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-logstreams</artifactId>
        <version>${zeebe.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-gateway-protocol-impl</artifactId>
        <version>${zeebe.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-exporter-api</artifactId>
        <version>${zeebe.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-elasticsearch-exporter</artifactId>
        <version>${zeebe.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-atomix-cluster</artifactId>
        <version>${zeebe.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.api.grpc</groupId>
        <artifactId>proto-google-common-protos</artifactId>
        <version>${proto.version}</version>
      </dependency>

      <dependency>
        <groupId>org.agrona</groupId>
        <artifactId>agrona</artifactId>
        <version>${agrona.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobuf.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-autoconfigure</artifactId>
        <version>${spring-boot.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-configuration-processor</artifactId>
        <version>${spring-boot.version}</version>
        <optional>true</optional>
      </dependency>

      <dependency>
        <groupId>org.camunda.community</groupId>
        <artifactId>eze-java</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>org.camunda.community</groupId>
        <artifactId>spring-eze-starter</artifactId>
        <version>${project.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${plugin.version.spotless}</version>
          <configuration>
            <!-- Google code format plugin -->
            <java>
              <googleJavaFormat>
                <version>${plugin.version.googlejavaformat}</version>
                <style>GOOGLE</style>
              </googleJavaFormat>
            </java>
            <!-- SortPOM plugin -->
            <pom>
              <sortPom>
                <expandEmptyElements>false</expandEmptyElements>
                <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
                <sortProperties>true</sortProperties>
              </sortPom>
            </pom>
            <applySkip>${skipChecks}</applySkip>
            <checkSkip>${skipChecks}</checkSkip>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.google.googlejavaformat</groupId>
              <artifactId>google-java-format</artifactId>
              <version>${plugin.version.googlejavaformat}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <goals>
                <goal>apply</goal>
              </goals>
              <phase>process-sources</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${plugin.version.javadoc}</version>
      </plugin>

      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>${plugin.version.license}</version>
        <configuration>
          <header>${license.header}</header>
          <aggregate>true</aggregate>
          <includes>
            <include>**/*.java</include>
          </includes>
          <excludes>
            <exclude>**/*.yml</exclude>
            <exclude>**/*.xml</exclude>
          </excludes>
          <mapping>
            <java>SLASHSTAR_STYLE</java>
          </mapping>
        </configuration>
        <executions>
          <execution>
            <id>add-license</id>
            <goals>
              <goal>format</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${plugin.version.spotless}</version>
        <configuration>
          <markdown>
            <includes>
              <include>**/*.md</include>
            </includes>
            <excludes>
              <exclude>**/target/**/*.md</exclude>
            </excludes>
            <flexmark />
          </markdown>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>apply</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Versions plugin to update versions in pom files -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${plugin.version.versions}</version>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>${plugin.version.flatten}</version>
        <configuration>
          <flattenMode>ossrh</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten</id>
            <goals>
              <goal>flatten</goal>
            </goals>
            <phase>process-resources</phase>
          </execution>
          <execution>
            <id>flatten.clean</id>
            <goals>
              <goal>clean</goal>
            </goals>
            <phase>clean</phase>
          </execution>
        </executions>
      </plugin>

      <!-- JaCoCo Plugin -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${plugin.version.jacoco}</version>
        <executions>
          <execution>
            <id>coverage-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>coverage-report</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>post-integration-test</phase>
          </execution>
          <!-- Threshold -->
        </executions>
      </plugin>

      <!-- Surefire plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${plugin.version.surefire}</version>
      </plugin>

      <!-- flaky test extractor plugin -->
      <plugin>
        <groupId>io.zeebe</groupId>
        <artifactId>flaky-test-extractor-maven-plugin</artifactId>
        <version>2.1.1</version>
        <executions>
          <execution>
            <goals>
              <goal>extract-flaky-tests</goal>
            </goals>
            <phase>post-integration-test</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
